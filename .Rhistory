l2[i]="not to reject"
}
}
#cat("(reject:TRUE, not to reject:FALSE)\n")
cat("AD6:", l2[1], "\n",
"AD7:", l2[2], "\n",
"AD7p:", l2[3])
return(list(AD6=l2[1]))
}
fun(data1, r, nboot)
fun <- function(data, r, nboot){
T1 = data[1][!is.na(data[1])]
T2 = data[2][!is.na(data[2])]
T12 = sort(c(T1,T2))
nboot=nboot
n1 = length(T1)
n2 = length(T2)
n = n1 + n2
weights1=T1 ^ r[1]
weights2=T2 ^ r[2]
WWeights1 = n1/(sum(1/weights1))
WWeights2 = n2/(sum(1/weights2))
p_hat1 = WWeights1/(n1*weights1)
p_hat2 = WWeights2/(n2*weights2)
#F hat
ECDF1 <- apply((matrix(rep(p_hat1,n-1), n-1, n1, byrow=TRUE) * (matrix(rep(T1,n-1), n-1, n1, byrow=TRUE) <= matrix(rep(T12[-n],n1), n-1, n1, byrow=FALSE))), 1, sum) #F_hat1
ECDF2 <- apply((matrix(rep(p_hat2,n-1), n-1, n2, byrow=TRUE) * (matrix(rep(T2,n-1), n-1, n2, byrow=TRUE) <= matrix(rep(T12[-n],n2), n-1, n2, byrow=FALSE))), 1, sum) #F_hat2
H_hat =  ( n1*ECDF1 + n2*ECDF2 )/n
dH_hatvec = c(0, H_hat)
AD6<- ((n1*n2)/n) * sum( ((ECDF1 - ECDF2)^2) / (H_hat*(1-H_hat)) * diff(dH_hatvec))
b1 <- ECDF1 - ECDF2
b2 <- b1
a11 <- H_hat*(1-H_hat)
a21 <- H_hat%*%t(1-H_hat)
a22 <- a11
AD7_unit <- matrix(rep(NA,(n-1)*(n-1)),n-1,n-1)
for(k in 2:(n-1)){ #t k=2
for(j in 1:(k-1)){ #s j=1
Vinv <- solve(matrix(c(a11[j], a21[j,k], a21[j,k], a22[k]),2,2)) #A2 second matrix inv
dH_hat_t_vec <- c(0, H_hat[k])
dH_hat_s_vec <- c(0, H_hat[j])
AD7_unit[j,k] <- (t(c(b1[j], b2[k]))%*%Vinv%*%c(b1[j], b2[k])) * diff(dH_hat_s_vec) * diff(dH_hat_t_vec)
}
}
AD7 <- (n1*n2/n)*sum(AD7_unit, na.rm=TRUE)  # NA bc for j=1, AD7_unit[1, 1] not defined
AD7p <- AD6 + AD7
#nboot=1000
AD6_star <- rep(NA,nboot)
AD7_star <- rep(NA,nboot)
for(b in 1:nboot){
xi1<- rnorm(n1, 0, 1)
xi2<- rnorm(n2, 0, 1)
D1_star <- apply(matrix(rep((xi1 * p_hat1),n-1), n-1, n1, byrow=TRUE) * ((matrix(rep(T1,n-1), n-1, n1, byrow=TRUE) <= matrix(rep(T12[-n],n1), n-1, n1, byrow=FALSE)) - H_hat[-n]), 1, sum)
D2_star <- apply(matrix(rep((xi2 * p_hat2),n-1), n-1, n2, byrow=TRUE) * ((matrix(rep(T2,n-1), n-1, n2, byrow=TRUE) <= matrix(rep(T12[-n],n2), n-1, n2, byrow=FALSE)) - H_hat[-n]), 1, sum)
AD_s_unit_6 <- (D1_star - D2_star) ^ 2
AD6_star[b] <- (n1*n2/n)*sum(AD_s_unit_6/(H_hat[-n]*(1-H_hat[-n]))*diff(dH_hatvec), na.rm = TRUE)
AD7_unit_star <- matrix(rep(NA,(n-1)*(n-1)),n-1,n-1)
b1s <- (D1_star - D2_star)
b2s<- b1s # v2
for(k in 2:(n-1)){   #t
for(j in 1:(k-1)){ #s
dH_hat_t_vec = c(0, H_hat[k])
dH_hat_s_vec = c(0, H_hat[j])
Vinv<- solve(matrix(c(a11[j], a21[j,k], a21[j,k], a22[k]),2,2))
AD7_unit_star[j,k]<- (t(c(b1s[j], b2s[k]))%*%Vinv%*%c(b1s[j], b2s[k]))*diff(dH_hat_s_vec)*diff(dH_hat_t_vec)
}
}
AD7_star[b]<- (n1*n2/n)*sum(AD7_unit_star,na.rm=TRUE)
}
AD7p_star  <- AD6_star + AD7_star
AD7p_star
rej.rate6<- AD6  > quantile(AD6_star,0.95,na.rm=TRUE)
rej.rate7<- AD7  > quantile(AD7_star,0.95,na.rm=TRUE)
rej.rate7p<- AD7p > quantile(AD7p_star,0.95,na.rm=TRUE)
l1 = list(rej.rate6,rej.rate7,rej.rate7p)
l2 = {}
for(i in c(1:3)){
if(l1[i]==TRUE){
l2[i]="reject"
}else{
l2[i]="not to reject"
}
}
#cat("(reject:TRUE, not to reject:FALSE)\n")
#cat("AD6:", l2[1], "\n",
#    "AD7:", l2[2], "\n",
#    "AD7p:", l2[3])
return(list(AD6=l2[1],AD7=l2[2],AD7p=l2[3]))
}
fun(data1, r, nboot)
BS_2sample <- function(data, r, nboot){
#data: list of two sample data(ex: list(T1,T2))
#r: weights of two samples
#nboot: number of bootstrap samples
T1 = data[[1]]
T2 = data[[2]]
T12 = sort(c(T1,T2))
nboot=nboot
n1 = length(T1)
n2 = length(T2)
n = n1 + n2
weights1=T1 ^ r[1]
weights2=T2 ^ r[2]
WWeights1 = n1/(sum(1/weights1))
WWeights2 = n2/(sum(1/weights2))
p_hat1 = WWeights1/(n1*weights1)
p_hat2 = WWeights2/(n2*weights2)
ECDF1 <- apply((matrix(rep(p_hat1,n-1), n-1, n1, byrow=TRUE) * (matrix(rep(T1,n-1), n-1, n1, byrow=TRUE) <= matrix(rep(T12[-n],n1), n-1, n1, byrow=FALSE))), 1, sum) #F_hat1
ECDF2 <- apply((matrix(rep(p_hat2,n-1), n-1, n2, byrow=TRUE) * (matrix(rep(T2,n-1), n-1, n2, byrow=TRUE) <= matrix(rep(T12[-n],n2), n-1, n2, byrow=FALSE))), 1, sum) #F_hat2
H_hat =  ( n1*ECDF1 + n2*ECDF2 )/n
dH_hatvec = c(0, H_hat)
AD6<- ((n1*n2)/n) * sum( ((ECDF1 - ECDF2)^2) / (H_hat*(1-H_hat)) * diff(dH_hatvec))
b1 <- ECDF1 - ECDF2
b2 <- b1
a11 <- H_hat*(1-H_hat)
a21 <- H_hat%*%t(1-H_hat)
a22 <- a11
AD7_unit <- matrix(rep(NA,(n-1)*(n-1)),n-1,n-1)
for(k in 2:(n-1)){ #t k=2
for(j in 1:(k-1)){ #s j=1
Vinv <- solve(matrix(c(a11[j], a21[j,k], a21[j,k], a22[k]),2,2))
dH_hat_t_vec <- c(0, H_hat[k])
dH_hat_s_vec <- c(0, H_hat[j])
AD7_unit[j,k] <- (t(c(b1[j], b2[k]))%*%Vinv%*%c(b1[j], b2[k])) * diff(dH_hat_s_vec) * diff(dH_hat_t_vec)
}
}
AD7 <- (n1*n2/n)*sum(AD7_unit, na.rm=TRUE)
AD7p <- AD6 + AD7
#nboot=1000
AD6_star <- rep(NA,nboot)
AD7_star <- rep(NA,nboot)
for(b in 1:nboot){
xi1<- rnorm(n1, 0, 1)
xi2<- rnorm(n2, 0, 1)
D1_star <- apply(matrix(rep((xi1 * p_hat1),n-1), n-1, n1, byrow=TRUE) * ((matrix(rep(T1,n-1), n-1, n1, byrow=TRUE) <= matrix(rep(T12[-n],n1), n-1, n1, byrow=FALSE)) - H_hat[-n]), 1, sum)
D2_star <- apply(matrix(rep((xi2 * p_hat2),n-1), n-1, n2, byrow=TRUE) * ((matrix(rep(T2,n-1), n-1, n2, byrow=TRUE) <= matrix(rep(T12[-n],n2), n-1, n2, byrow=FALSE)) - H_hat[-n]), 1, sum)
AD_s_unit_6 <- (D1_star - D2_star) ^ 2
AD6_star[b] <- (n1*n2/n)*sum(AD_s_unit_6/(H_hat[-n]*(1-H_hat[-n]))*diff(dH_hatvec), na.rm = TRUE)
AD7_unit_star <- matrix(rep(NA,(n-1)*(n-1)),n-1,n-1)
b1s <- (D1_star - D2_star)
b2s<- b1s # v2
for(k in 2:(n-1)){   #t
for(j in 1:(k-1)){ #s
dH_hat_t_vec = c(0, H_hat[k])
dH_hat_s_vec = c(0, H_hat[j])
Vinv<- solve(matrix(c(a11[j], a21[j,k], a21[j,k], a22[k]),2,2))
AD7_unit_star[j,k]<- (t(c(b1s[j], b2s[k]))%*%Vinv%*%c(b1s[j], b2s[k]))*diff(dH_hat_s_vec)*diff(dH_hat_t_vec)
}
}
AD7_star[b]<- (n1*n2/n)*sum(AD7_unit_star,na.rm=TRUE)
}
AD7p_star  <- AD6_star + AD7_star
AD7p_star
rej.rate6<- AD6  > quantile(AD6_star,0.95,na.rm=TRUE)
rej.rate7<- AD7  > quantile(AD7_star,0.95,na.rm=TRUE)
rej.rate7p<- AD7p > quantile(AD7p_star,0.95,na.rm=TRUE)
l1 = list(rej.rate6,rej.rate7,rej.rate7p)
l2 = {}
for(i in c(1:3)){
if(l1[i]==TRUE){
l2[i]="reject"
}else{
l2[i]="not to reject"
}
}
return(list(AD6=l2[1],AD7=l2[2],AD7p=l2[3]))
}
knitr::opts_chunk$set(echo = TRUE)
bac_dat=read.csv("data.csv",header=TRUE)
age=bac_dat$AGE
alc_res=bac_dat$ALC_RES/100
young=alc_res[age<30]
old=alc_res[age>=30]
T1 = young
T2 = old
data1 = list(T1,T2)
r = c(0.5,1)
nboot = 1000
T12 = sort(c(T1,T2))
nboot=nboot
n1 = length(T1)
n2 = length(T2)
n = n1 + n2
weights1=T1 ^ r[1]
weights2=T2 ^ r[2]
WWeights1 = n1/(sum(1/weights1))
WWeights2 = n2/(sum(1/weights2))
p_hat1 = WWeights1/(n1*weights1)
p_hat2 = WWeights2/(n2*weights2)
#F hat
ECDF1 <- apply((matrix(rep(p_hat1,n-1), n-1, n1, byrow=TRUE) * (matrix(rep(T1,n-1), n-1, n1, byrow=TRUE) <= matrix(rep(T12[-n],n1), n-1, n1, byrow=FALSE))), 1, sum) #F_hat1
ECDF2 <- apply((matrix(rep(p_hat2,n-1), n-1, n2, byrow=TRUE) * (matrix(rep(T2,n-1), n-1, n2, byrow=TRUE) <= matrix(rep(T12[-n],n2), n-1, n2, byrow=FALSE))), 1, sum) #F_hat2
H_hat =  ( n1*ECDF1 + n2*ECDF2 )/n
dH_hatvec = c(0, H_hat)
AD6<- ((n1*n2)/n) * sum( ((ECDF1 - ECDF2)^2) / (H_hat*(1-H_hat)) * diff(dH_hatvec))
b1 <- ECDF1 - ECDF2
b2 <- b1
a11 <- H_hat*(1-H_hat)
a21 <- H_hat%*%t(1-H_hat)
a22 <- a11
AD7_unit <- matrix(rep(NA,(n-1)*(n-1)),n-1,n-1)
print(H_hat)
b1 <- ECDF1 - ECDF2
b2 <- b1
a11 <- H_hat*(1-H_hat)
a21 <- H_hat%*%t(1-H_hat)
a22 <- a11
AD7_unit <- matrix(rep(NA,(n-1)*(n-1)),n-1,n-1)
print(H_hat)
b1 <- ECDF1 - ECDF2
b2 <- b1
a11 <- H_hat*(1-H_hat)
a21 <- H_hat%*%t(1-H_hat)
a22 <- a11
AD7_unit <- matrix(rep(NA,(n-1)*(n-1)),n-1,n-1)
print(H_hat)
b1 <- ECDF1 - ECDF2
b2 <- b1
a11 <- H_hat*(1-H_hat)
a21 <- H_hat%*%t(1-H_hat)
a22 <- a11
AD7_unit <- matrix(rep(NA,(n-1)*(n-1)),n-1,n-1)
print(H_hat)
kj1={}
k1={}
j1={}
for(k in 2:(n-1)){ #t k=2
for(j in 1:(k-1)){ #s j=1
if (det(matrix(c(a11[j], a21[j,k], a21[j,k], a22[k]),2,2))==0){
#cat("k:",k,"j:",j,"\n")
kj1 = append(kj1,paste(k,j,sep=","))
k1 = append(k1,k)
j1 = append(j1,j)
}
}
}
for(k in 2:(n-1)){ #t k=2
for(j in 1:(k-1)){ #s j=1
if (det(matrix(c(a11[j], a21[j,k], a21[j,k], a22[k]),2,2))==0){
#cat("k:",k,"j:",j,"\n")
kj1 = append(kj1,paste(k,j,sep=","))
k1 = append(k1,k)
j1 = append(j1,j)
}
}
}
mat1 = {}
for(i in c(1:length(k1))){
mat = matrix(c(a11[j1[i]], a21[j1[i],k1[i]], a21[j1[i],k1[i]],a22[k1[i]]),2,2)
#cat("k=",k1[i],",","j=",j1[i],"\n","matrix:","\n")
#print(mat)
mat1 = append(mat1,mat)
}
#print(mat1)
cat(k1[1],j1[1])
#print(mat1)
#cat(k1[1],j1[1])
print(matrix(c(mat1[1]:mat1[4]),2,2))
#
a11cat = paste0("a11[",j1[1],"]")
a21cat = paste0("a21[",j1[1],",",k1[1],"]")
a22cat = paste0("a22[",k1[1],"]")
aamat = matrix(c(a11cat, a21cat, a21cat, a22cat),2,2)
aamat
x=1
for(i in c(1:length(k1))){
cat(j1[i],k1[i],"\n")
print(matrix(c(mat1[x]:mat1[x+3]),2,2))
x = x+4
a11cat = paste0("a11[",j1[i],"]")
a21cat = paste0("a21[",j1[i],",",k1[i],"]")
a22cat = paste0("a22[",k1[i],"]")
aamat = matrix(c(a11cat, a21cat, a21cat, a22cat),2,2)
print(aamat)
hcat1 = paste0(H_hat[j1[i]],"*",(1-H_hat)[j1[i]])
hcat2 = paste0(H_hat[j1[i]],"&",H_hat[k1[i]])
hcat3 = paste0(H_hat[k1[i]],"*",H_hat[k1[i]])
hcat = matrix(c(hcat1,hcat2,hcat2,hcat3),2,2)
print(hcat)
}
0.129215612004102*0.870784387995898
length(ECDF1)
length(H_hat)
length(young)
length(old)
67+58
(67*ECDF1[1] + 58*ECDF2[1] )/125
H_hat[1]
paste0(1,2,3,"\n",1)
paste0(1,2,3,"\n",1)
paste0(1,2,3
,333)
length(k1)
ECDF1[j1[1]]
(matrix(rep(T1,n-1), n-1, n1, byrow=TRUE) <= matrix(rep(T12[-n],n1), n-1, n1, byrow=FALSE))
a = (matrix(rep(T1,n-1), n-1, n1, byrow=TRUE) <= matrix(rep(T12[-n],n1), n-1, n1, byrow=FALSE))
a[1,]
matrix(rep(p_hat1,n-1), n-1, n1, byrow=TRUE)
b = matrix(rep(p_hat1,n-1), n-1, n1, byrow=TRUE)
b[1,]
a[1,]*b[1,]
sum(a[1,]*b[1,])
ECDF1[1]
a[1,]
a[1,][a[1,]==TRUE]
a[1,][TRUE]
match(TRUE,a[1,])
a[1,]
which(a[1,] %in% TRUE)
index = which(a[1,] %in% TRUE)
index[1]
a[1,]
a[1,][index]
index
print(index)
T1[15]
ECDF2[1]
T1 <- rbeta(90,6,7)
T2 <- rbeta(100,3,3)
data = list(T1,T2)
r = c(0.5,1)
nboot = 1000
BS_2sample(data, r, nboot)
BS_2sample <- function(data, r, nboot){
T1 = data[[1]]
T2 = data[[2]]
#T12 = sort(c(T1,T2))
T12 = sort(unique(c(T1,T2)))
nboot=nboot
n1 = length(T1)
n2 = length(T2)
n = n1 + n2
nn = length(T12)
weights1=T1 ^ r[1]
weights2=T2 ^ r[2]
WWeights1 = n1/(sum(1/weights1))
WWeights2 = n2/(sum(1/weights2))
p_hat1 = WWeights1/(n1*weights1)
p_hat2 = WWeights2/(n2*weights2)
#F hat
ECDF1 <- apply((matrix(rep(p_hat1,nn-1), nn-1, n1, byrow=TRUE) * (matrix(rep(T1,nn-1), nn-1, n1, byrow=TRUE) <= matrix(rep(T12[-nn],n1), nn-1, n1, byrow=FALSE))), 1, sum) #F_hat1
ECDF2 <- apply((matrix(rep(p_hat2,nn-1), nn-1, n2, byrow=TRUE) * (matrix(rep(T2,nn-1), nn-1, n2, byrow=TRUE) <= matrix(rep(T12[-nn],n2), nn-1, n2, byrow=FALSE))), 1, sum) #F_hat2
H_hat =  ( n1*ECDF1 + n2*ECDF2 )/n
dH_hatvec = c(0, H_hat)
AD6<- ((n1*n2)/n) * sum( ((ECDF1 - ECDF2)^2) / (H_hat*(1-H_hat)) * diff(dH_hatvec))
b1 <- ECDF1 - ECDF2
b2 <- b1
a11 <- H_hat*(1-H_hat)
a21 <- H_hat%*%t(1-H_hat)
a22 <- a11
AD7_unit <- matrix(rep(NA,(nn-1)*(nn-1)),nn-1,nn-1)
for(k in 2:(nn-1)){ #t k=2
for(j in 1:(k-1)){ #s j=1
Vinv <- solve(matrix(c(a11[j], a21[j,k], a21[j,k], a22[k]),2,2))
dH_hat_t_vec <- c(0, H_hat[k])
dH_hat_s_vec <- c(0, H_hat[j])
AD7_unit[j,k] <- (t(c(b1[j], b2[k]))%*%Vinv%*%c(b1[j], b2[k])) * diff(dH_hat_s_vec) * diff(dH_hat_t_vec)
}
}
AD7 <- (n1*n2/n)*sum(AD7_unit, na.rm=TRUE)
AD7p <- AD6 + AD7
AD6_star <- rep(NA,nboot)
AD7_star <- rep(NA,nboot)
for(b in 1:nboot){
xi1<- rnorm(n1, 0, 1)
xi2<- rnorm(n2, 0, 1)
D1_star <- apply(matrix(rep((xi1 * p_hat1),nn-1), nn-1, n1, byrow=TRUE) * ((matrix(rep(T1,nn-1), nn-1, n1, byrow=TRUE) <= matrix(rep(T12[-nn],n1), nn-1, n1, byrow=FALSE)) - H_hat[-nn]), 1, sum)
D2_star <- apply(matrix(rep((xi2 * p_hat2),nn-1), nn-1, n2, byrow=TRUE) * ((matrix(rep(T2,nn-1), nn-1, n2, byrow=TRUE) <= matrix(rep(T12[-nn],n2), nn-1, n2, byrow=FALSE)) - H_hat[-nn]), 1, sum)
AD_s_unit_6 <- (D1_star - D2_star) ^ 2
AD6_star[b] <- (n1*n2/n)*sum(AD_s_unit_6/(H_hat[-nn]*(1-H_hat[-nn]))*diff(dH_hatvec), na.rm = TRUE)
AD7_unit_star <- matrix(rep(NA,(nn-1)*(nn-1)),nn-1,nn-1)
b1s <- (D1_star - D2_star)
b2s<- b1s # v2
for(k in 2:(nn-1)){   #t
for(j in 1:(k-1)){ #s
dH_hat_t_vec = c(0, H_hat[k])
dH_hat_s_vec = c(0, H_hat[j])
Vinv<- solve(matrix(c(a11[j], a21[j,k], a21[j,k], a22[k]),2,2))
AD7_unit_star[j,k]<- (t(c(b1s[j], b2s[k]))%*%Vinv%*%c(b1s[j], b2s[k]))*diff(dH_hat_s_vec)*diff(dH_hat_t_vec)
}
}
AD7_star[b]<- (n1*n2/n)*sum(AD7_unit_star,na.rm=TRUE)
}
AD7p_star  <- AD6_star + AD7_star
rej.rate6<- AD6  > quantile(AD6_star,0.95,na.rm=TRUE)
rej.rate7<- AD7  > quantile(AD7_star,0.95,na.rm=TRUE)
rej.rate7p<- AD7p > quantile(AD7p_star,0.95,na.rm=TRUE)
l1 = list(rej.rate6,rej.rate7,rej.rate7p)
l2 = {}
for(i in c(1:3)){
if(l1[i]==TRUE){
l2[i]="reject"
}else{
l2[i]="not to reject"
}
}
return(list(AD6=l2[1],AD7=l2[2],AD7p=l2[3]))
}
BS_2sample(data, r, nboot)
T1 <- rbeta(40,6,7)
T2 <- rbeta(50,3,3)
data = list(T1,T2)
r = c(0.5,1)
nboot = 1000
BS_2sample(data, r, nboot)
knitr::opts_chunk$set(echo = TRUE)
x = seq(from=2009,to=2019)
x
x
gc()
?quantile
quantile(x <- rnorm(1001))
set.seed(1)
quantile(x <- rnorm(10),type=1)
quantile(x <- rnorm(10),type=2)
set.seed(1)
quantile(x <- rnorm(10),type=2)
set.seed(1)
quantile(x <- rnorm(10),type=3)
set.seed(1)
quantile(x <- rnorm(10),type=1)
set.seed(1)
quantile(x <- rnorm(10),type=2)
set.seed(1)
quantile(x <- rnorm(10),type=3)
set.seed(1)
quantile(x <- rnorm(10),type=4)
set.seed(1)
quantile(x <- rnorm(10),type=5)
set.seed(1)
quantile(x <- rnorm(10),type=6)
set.seed(1)
quantile(x <- rnorm(10),type=7)
set.seed(1)
quantile(x <- rnorm(10),type=8)
set.seed(1)
quantile(x <- rnorm(10),type=9)
x = seq(1:94)
x
x = append(x,94)
x
c(x,seq(96:100))
c(x,seq(c(96:100))
c(x,seq(c(96:100)))
c(x,seq(c(96:100)))
c(x,c(96,97,98,99,100))
x = c(x,c(96,97,98,99,100))
x
quantile(x,0.95,type=5)
quantile(x,0.95,type=4)
quantile(x,0.95,type=3)
quantile(x,0.95,type=2)
quantile(x,0.95,type=1)
quantile(x,0.95,type=7)
quantile(x,0.95)
x = seq(1:94)
x = append(x,94)
x = c(x,c(96,97,98,99,100))
x
quantile(x,0.95,type=1)
print(quantile(x,0.95,type=i))
for(i in c(1:9)){
print(quantile(x,0.95,type=i))
}
for(i in c(1:9)){
print(paste0("type",i))
print(quantile(x,0.95,type=i))
}
x = seq(1:94)
x = append(x,94)
x = c(x,c(97,97,98,99,100))
x
for(i in c(1:9)){
print(paste0("type",i))
print(quantile(x,0.95,type=i))
}
x = seq(1:94)
x = append(x,94)
x = c(x,c(96.9,97,98,99,100))
for(i in c(1:9)){
print(paste0("type",i))
print(quantile(x,0.95,type=i))
}
x = seq(1:100)
for(i in c(1:9)){
print(paste0("type",i))
print(quantile(x,0.95,type=i))
}
x = seq(1:94)
x = append(x,95)
x = c(x,c(97,97,98,99,100))
x
for(i in c(1:9)){
print(paste0("type",i))
print(quantile(x,0.95,type=i))
}
x = seq(1:94)
x = append(x,95)
x = c(x,c(96.5,97,98,99,100))
for(i in c(1:9)){
print(paste0("type",i))
print(quantile(x,0.95,type=i))
}
x = seq(1:94)
x = append(x,94)
x = c(x,c(96,97,98,99,100))
x
for(i in c(1:9)){
print(paste0("type",i))
print(quantile(x,0.95,type=i))
}
setwd("D:/大四上/internship/中研院兼任研究助理/統計所/STAT_Tasks")
