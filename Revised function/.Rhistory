foo <- function() {
if (!is.null(seed <- getOption("myseed")))
set.seed(seed)
sample(10)
}
getOption("myseed")
options(myseed=1)
foo()
foo()
foo()
options(myseed=2)
foo()
foo()
foo <- function() {
if (!is.null(seed <- getOption("myseed")))
set.seed(seed)
sample(10)
}
options(myseed=2)
foo()
rnorm(10)
set.seed(1)
rnorm(10)
rnorm(10)
set.seed(1)
rnorm(10)
set.seed(1)
rnorm(10)
set.seed(1)
rnorm(10)
set.seed(1)
rnorm(10)
T1 = rbeta(2,1,3)
T1
T2 = rbeta(3,2,4)
r = c(0.5,1)
nboot = 1000
BS_2sample_revised <- function(data, r, nboot){
T1 = data[[1]]
T2 = data[[2]]
T12 <- sort(unique(c(T1,T2)))
nboot=nboot
n1 = length(T1)
n2 = length(T2)
n = n1 + n2
nn = length(T12)
weights1=T1 ^ r[1]
weights2=T2 ^ r[2]
weights = c(weights1,weights2)
WWeights1 = n1/(sum(1/weights1))
WWeights2 = n2/(sum(1/weights2))
WWeights  = c(WWeights1,WWeights2)
kk = c(n1/n,n2/n)
p_hat1 = WWeights1/(n1*weights1)
p_hat2 = WWeights2/(n2*weights2)
ECDF1 <- apply((matrix(rep(p_hat1,nn-1), nn-1, n1, byrow=TRUE) * (matrix(rep(T1,nn-1), nn-1, n1, byrow=TRUE) <= matrix(rep(T12[-nn],n1), nn-1, n1, byrow=FALSE))), 1, sum) #F_hat1
ECDF2 <- apply((matrix(rep(p_hat2,nn-1), nn-1, n2, byrow=TRUE) * (matrix(rep(T2,nn-1), nn-1, n2, byrow=TRUE) <= matrix(rep(T12[-nn],n2), nn-1, n2, byrow=FALSE))), 1, sum) #F_hat2
H_hat =  ( n1*ECDF1 + n2*ECDF2 )/n
dH_hatvec = c(0, H_hat)
theta_hat_t_t = theta_func("t","t",list(T1,T2),T12,c(WWeights1, WWeights2),list(weights1,weights2),c(n1,n2),n,nn,H_hat)
AD6_o<- ((n1*n2)/n) * sum( ((ECDF1 - ECDF2)^2) / (H_hat*(1-H_hat)) * diff(dH_hatvec))
AD6_t<- n * sum( ((ECDF1 - ECDF2)^2) / (theta_hat_t_t) * diff(dH_hatvec))
#AD7
theta_hat_s_t = theta_func("s","t",list(T1,T2),T12,c(WWeights1, WWeights2),list(weights1,weights2),c(n1,n2),n,nn,H_hat)
b1  <- ECDF1 - ECDF2 #A2 first matrix[1,1]
b2  <- b1 #A2 first matrix[1,2]
a11_t <- theta_hat_t_t #A2 second matrix[1,1]
a11_o <- H_hat*(1-H_hat)
a21_t <- theta_hat_s_t #A2 second matrix[2,1]&[1,2]
a21_o <- H_hat%*%t(1-H_hat)
a22_t <- a11_t #A2 second matrix[2,2]
a22_o <- a11_o #A2 second matrix[2,2]
AD7_unit_t <- matrix(rep(NA,(nn-1)*(nn-1)),nn-1,nn-1)
AD7_unit_o <- matrix(rep(NA,(nn-1)*(nn-1)),nn-1,nn-1)
for(k in 2:(nn-1)){  #t k=2
for(j in 1:(k-1)){ #s j=1
Vinv_t <- solve(matrix(c(a11_t[j], a21_t[j], a21_t[j], a22_t[k]),2,2)) #A2 second matrix inv
Vinv_o <- solve(matrix(c(a11_o[j], a21_o[j,k], a21_o[j,k], a22_o[k]),2,2))
dH_hat_t_vec <- c(0, H_hat[k])
dH_hat_s_vec <- c(0, H_hat[j])
AD7_unit_t[j,k] <- (t(c(b1[j], b2[k]))%*%Vinv_t%*%c(b1[j], b2[k])) * diff(dH_hat_s_vec) * diff(dH_hat_t_vec)
AD7_unit_o[j,k] <- (t(c(b1[j], b2[k]))%*%Vinv_o%*%c(b1[j], b2[k])) * diff(dH_hat_s_vec) * diff(dH_hat_t_vec)
}
}
AD7_o <- (n1*n2/n)*sum(AD7_unit_o, na.rm=TRUE)  # NA bc for j=1, AD7_unit[1, 1] not defined
AD7_t <- n*sum(AD7_unit_t, na.rm=TRUE)
AD7p_t <- AD6_t + AD7_t
AD7p_o <- AD6_o + AD7_o
AD6_star_t <- rep(NA,nboot)
AD7_star_t <- rep(NA,nboot)
AD6_star_o <- rep(NA,nboot)
AD7_star_o <- rep(NA,nboot)
#b = 1 #for test
for(b in 1:nboot){
xi1<- rnorm(n1, 0, 1)
xi2<- rnorm(n2, 0, 1)
D1_star <- apply(matrix(rep((xi1 * p_hat1),nn-1), nn-1, n1, byrow=TRUE) * ((matrix(rep(T1,nn-1), nn-1, n1, byrow=TRUE) <= matrix(rep(T12[-nn],n1), nn-1, n1, byrow=FALSE)) - H_hat[-nn]), 1, sum)
D2_star <- apply(matrix(rep((xi2 * p_hat2),nn-1), nn-1, n2, byrow=TRUE) * ((matrix(rep(T2,nn-1), nn-1, n2, byrow=TRUE) <= matrix(rep(T12[-nn],n2), nn-1, n2, byrow=FALSE)) - H_hat[-nn]), 1, sum)
#AD6
# AD_s_unit_6_I1 <- apply(matrix(rep(xi1,n-1), n-1, n1, byrow=TRUE) * ((matrix(rep(T1,n-1), n-1, n1, byrow=TRUE) <= matrix(rep(T12[-n],n1), n-1, n1, byrow=FALSE)) - H_hat[-n]), 1, mean)
# AD_s_unit_6_I2 <- apply(matrix(rep(xi2,n-1), n-1, n2, byrow=TRUE) * ((matrix(rep(T2,n-1), n-1, n2, byrow=TRUE) <= matrix(rep(T12[-n],n2), n-1, n2, byrow=FALSE)) - H_hat[-n]), 1, mean)
AD_s_unit_6 <- (D1_star - D2_star) ^ 2
AD6_star_o[b] <- (n1*n2/n)*sum(AD_s_unit_6/(H_hat[-nn]*(1-H_hat[-nn]))*diff(dH_hatvec), na.rm = TRUE)
AD6_star_t[b] <- n*sum(AD_s_unit_6/(theta_hat_t_t)*diff(dH_hatvec), na.rm = TRUE)
#AD7
AD7_unit_star_t <- matrix(rep(NA,(nn-1)*(nn-1)),nn-1,nn-1)
AD7_unit_star_o <- matrix(rep(NA,(nn-1)*(nn-1)),nn-1,nn-1)
# b1s_I1 <- apply(matrix(rep(xi1,n-1), n-1, n1, byrow=TRUE) * ((matrix(rep(T1,n-1), n-1, n1, byrow=TRUE) <= matrix(rep(T12[-n],n1), n-1, n1, byrow=FALSE)) - H_hat[-n]), 1, mean)
# b1s_I2 <- apply(matrix(rep(xi2,n-1), n-1, n2, byrow=TRUE) * ((matrix(rep(T2,n-1), n-1, n2, byrow=TRUE) <= matrix(rep(T12[-n],n2), n-1, n2, byrow=FALSE)) - H_hat[-n]), 1, mean)
b1s <- (D1_star - D2_star)
b2s<- b1s # v2
for(k in 2:(nn-1)){  #t
for(j in 1:(k-1)){ #s
dH_hat_t_vec = c(0, H_hat[k])
dH_hat_s_vec = c(0, H_hat[j])
Vinv_t <- solve(matrix(c(a11_t[j], a21_t[j], a21_t[j], a22_t[k]),2,2))
Vinv_o <- solve(matrix(c(a11_o[j], a21_o[j,k], a21_o[j,k], a22_o[k]),2,2))
AD7_unit_star_t[j,k]<- (t(c(b1s[j], b2s[k]))%*%Vinv_t%*%c(b1s[j], b2s[k]))*diff(dH_hat_s_vec)*diff(dH_hat_t_vec)
AD7_unit_star_o[j,k]<- (t(c(b1s[j], b2s[k]))%*%Vinv_o%*%c(b1s[j], b2s[k]))*diff(dH_hat_s_vec)*diff(dH_hat_t_vec)
}
}
AD7_star_t[b]<- n*sum(AD7_unit_star_t,na.rm=TRUE)
AD7_star_o[b]<- (n1*n2/n)*sum(AD7_unit_star_o,na.rm=TRUE)
}
AD7p_star_t  <- AD6_star_t + AD7_star_t
rej.rate6_t[d]<- AD6_t  > quantile(AD6_star_t,0.95)
rej.rate7_t[d]<- AD7_t  > quantile(AD7_star_t,0.95)
rej.rate7p_t[d]<- AD7p_t > quantile(AD7p_star_t,0.95)
AD7p_star_o  <- AD6_star_o + AD7_star_o
rej.rate6_o[d]<- AD6_o  > quantile(AD6_star_o,0.95)
rej.rate7_o[d]<- AD7_o  > quantile(AD7_star_o,0.95)
rej.rate7p_o[d]<- AD7p_o > quantile(AD7p_star_o,0.95)
}
BS_2sample_revised <- function(data, r, nboot){
T1 = data[[1]]
T2 = data[[2]]
T12 <- sort(unique(c(T1,T2)))
nboot=nboot
n1 = length(T1)
n2 = length(T2)
n = n1 + n2
nn = length(T12)
weights1=T1 ^ r[1]
weights2=T2 ^ r[2]
weights = c(weights1,weights2)
WWeights1 = n1/(sum(1/weights1))
WWeights2 = n2/(sum(1/weights2))
WWeights  = c(WWeights1,WWeights2)
kk = c(n1/n,n2/n)
p_hat1 = WWeights1/(n1*weights1)
p_hat2 = WWeights2/(n2*weights2)
ECDF1 <- apply((matrix(rep(p_hat1,nn-1), nn-1, n1, byrow=TRUE) * (matrix(rep(T1,nn-1), nn-1, n1, byrow=TRUE) <= matrix(rep(T12[-nn],n1), nn-1, n1, byrow=FALSE))), 1, sum) #F_hat1
ECDF2 <- apply((matrix(rep(p_hat2,nn-1), nn-1, n2, byrow=TRUE) * (matrix(rep(T2,nn-1), nn-1, n2, byrow=TRUE) <= matrix(rep(T12[-nn],n2), nn-1, n2, byrow=FALSE))), 1, sum) #F_hat2
H_hat =  ( n1*ECDF1 + n2*ECDF2 )/n
dH_hatvec = c(0, H_hat)
theta_hat_t_t = theta_func("t","t",list(T1,T2),T12,c(WWeights1, WWeights2),list(weights1,weights2),c(n1,n2),n,nn,H_hat)
AD6_o<- ((n1*n2)/n) * sum( ((ECDF1 - ECDF2)^2) / (H_hat*(1-H_hat)) * diff(dH_hatvec))
AD6_t<- n * sum( ((ECDF1 - ECDF2)^2) / (theta_hat_t_t) * diff(dH_hatvec))
#AD7
theta_hat_s_t = theta_func("s","t",list(T1,T2),T12,c(WWeights1, WWeights2),list(weights1,weights2),c(n1,n2),n,nn,H_hat)
b1  <- ECDF1 - ECDF2 #A2 first matrix[1,1]
b2  <- b1 #A2 first matrix[1,2]
a11_t <- theta_hat_t_t #A2 second matrix[1,1]
a11_o <- H_hat*(1-H_hat)
a21_t <- theta_hat_s_t #A2 second matrix[2,1]&[1,2]
a21_o <- H_hat%*%t(1-H_hat)
a22_t <- a11_t #A2 second matrix[2,2]
a22_o <- a11_o #A2 second matrix[2,2]
AD7_unit_t <- matrix(rep(NA,(nn-1)*(nn-1)),nn-1,nn-1)
AD7_unit_o <- matrix(rep(NA,(nn-1)*(nn-1)),nn-1,nn-1)
for(k in 2:(nn-1)){  #t k=2
for(j in 1:(k-1)){ #s j=1
Vinv_t <- solve(matrix(c(a11_t[j], a21_t[j], a21_t[j], a22_t[k]),2,2)) #A2 second matrix inv
Vinv_o <- solve(matrix(c(a11_o[j], a21_o[j,k], a21_o[j,k], a22_o[k]),2,2))
dH_hat_t_vec <- c(0, H_hat[k])
dH_hat_s_vec <- c(0, H_hat[j])
AD7_unit_t[j,k] <- (t(c(b1[j], b2[k]))%*%Vinv_t%*%c(b1[j], b2[k])) * diff(dH_hat_s_vec) * diff(dH_hat_t_vec)
AD7_unit_o[j,k] <- (t(c(b1[j], b2[k]))%*%Vinv_o%*%c(b1[j], b2[k])) * diff(dH_hat_s_vec) * diff(dH_hat_t_vec)
}
}
AD7_o <- (n1*n2/n)*sum(AD7_unit_o, na.rm=TRUE)  # NA bc for j=1, AD7_unit[1, 1] not defined
AD7_t <- n*sum(AD7_unit_t, na.rm=TRUE)
AD7p_t <- AD6_t + AD7_t
AD7p_o <- AD6_o + AD7_o
AD6_star_t <- rep(NA,nboot)
AD7_star_t <- rep(NA,nboot)
AD6_star_o <- rep(NA,nboot)
AD7_star_o <- rep(NA,nboot)
#b = 1 #for test
for(b in 1:nboot){
xi1<- rnorm(n1, 0, 1)
xi2<- rnorm(n2, 0, 1)
D1_star <- apply(matrix(rep((xi1 * p_hat1),nn-1), nn-1, n1, byrow=TRUE) * ((matrix(rep(T1,nn-1), nn-1, n1, byrow=TRUE) <= matrix(rep(T12[-nn],n1), nn-1, n1, byrow=FALSE)) - H_hat[-nn]), 1, sum)
D2_star <- apply(matrix(rep((xi2 * p_hat2),nn-1), nn-1, n2, byrow=TRUE) * ((matrix(rep(T2,nn-1), nn-1, n2, byrow=TRUE) <= matrix(rep(T12[-nn],n2), nn-1, n2, byrow=FALSE)) - H_hat[-nn]), 1, sum)
#AD6
# AD_s_unit_6_I1 <- apply(matrix(rep(xi1,n-1), n-1, n1, byrow=TRUE) * ((matrix(rep(T1,n-1), n-1, n1, byrow=TRUE) <= matrix(rep(T12[-n],n1), n-1, n1, byrow=FALSE)) - H_hat[-n]), 1, mean)
# AD_s_unit_6_I2 <- apply(matrix(rep(xi2,n-1), n-1, n2, byrow=TRUE) * ((matrix(rep(T2,n-1), n-1, n2, byrow=TRUE) <= matrix(rep(T12[-n],n2), n-1, n2, byrow=FALSE)) - H_hat[-n]), 1, mean)
AD_s_unit_6 <- (D1_star - D2_star) ^ 2
AD6_star_o[b] <- (n1*n2/n)*sum(AD_s_unit_6/(H_hat[-nn]*(1-H_hat[-nn]))*diff(dH_hatvec), na.rm = TRUE)
AD6_star_t[b] <- n*sum(AD_s_unit_6/(theta_hat_t_t)*diff(dH_hatvec), na.rm = TRUE)
#AD7
AD7_unit_star_t <- matrix(rep(NA,(nn-1)*(nn-1)),nn-1,nn-1)
AD7_unit_star_o <- matrix(rep(NA,(nn-1)*(nn-1)),nn-1,nn-1)
# b1s_I1 <- apply(matrix(rep(xi1,n-1), n-1, n1, byrow=TRUE) * ((matrix(rep(T1,n-1), n-1, n1, byrow=TRUE) <= matrix(rep(T12[-n],n1), n-1, n1, byrow=FALSE)) - H_hat[-n]), 1, mean)
# b1s_I2 <- apply(matrix(rep(xi2,n-1), n-1, n2, byrow=TRUE) * ((matrix(rep(T2,n-1), n-1, n2, byrow=TRUE) <= matrix(rep(T12[-n],n2), n-1, n2, byrow=FALSE)) - H_hat[-n]), 1, mean)
b1s <- (D1_star - D2_star)
b2s<- b1s # v2
for(k in 2:(nn-1)){  #t
for(j in 1:(k-1)){ #s
dH_hat_t_vec = c(0, H_hat[k])
dH_hat_s_vec = c(0, H_hat[j])
Vinv_t <- solve(matrix(c(a11_t[j], a21_t[j], a21_t[j], a22_t[k]),2,2))
Vinv_o <- solve(matrix(c(a11_o[j], a21_o[j,k], a21_o[j,k], a22_o[k]),2,2))
AD7_unit_star_t[j,k]<- (t(c(b1s[j], b2s[k]))%*%Vinv_t%*%c(b1s[j], b2s[k]))*diff(dH_hat_s_vec)*diff(dH_hat_t_vec)
AD7_unit_star_o[j,k]<- (t(c(b1s[j], b2s[k]))%*%Vinv_o%*%c(b1s[j], b2s[k]))*diff(dH_hat_s_vec)*diff(dH_hat_t_vec)
}
}
AD7_star_t[b]<- n*sum(AD7_unit_star_t,na.rm=TRUE)
AD7_star_o[b]<- (n1*n2/n)*sum(AD7_unit_star_o,na.rm=TRUE)
}
AD7p_star_t  <- AD6_star_t + AD7_star_t
rej.rate6_t[d]<- AD6_t  > quantile(AD6_star_t,0.95)
rej.rate7_t[d]<- AD7_t  > quantile(AD7_star_t,0.95)
rej.rate7p_t[d]<- AD7p_t > quantile(AD7p_star_t,0.95)
AD7p_star_o  <- AD6_star_o + AD7_star_o
rej.rate6_o[d]<- AD6_o  > quantile(AD6_star_o,0.95)
rej.rate7_o[d]<- AD7_o  > quantile(AD7_star_o,0.95)
rej.rate7p_o[d]<- AD7p_o > quantile(AD7p_star_o,0.95)
out_matrix = matrix(c(mean(rej.rate6_o),mean(rej.rate6_t),
mean(rej.rate7_o),mean(rej.rate7_t),
mean(rej.rate7p_o),mean(rej.rate7p_t)),2,3)
out_array=list(
rej.rate6_o=rej.rate6_o,
rej.rate7_o=rej.rate7_o,
rej.rate7p_o=rej.rate7p_o,
rej.rate6_t=rej.rate6_t,
rej.rate7_t=rej.rate7_t,
rej.rate7p_t=rej.rate7p_t
)
return(list(out_matrix,out_array))
}
BS_2sample_revised(data,r,nboot)
data = list(T1,T2)
BS_2sample_revised(data,r,nboot)
theta_func = function(s, t, TT, T12, WWeights, weights, ns, ns_sum, nn, H_hat){
#testing
# s = "t"
# t = "t"
# TT = list(T1,T2)
# T12=T12
# WWeights = c(WWeights1, WWeights2)
# weights = list(weights1,weights2)
# ns = c(n1,n2)
# ns_sum = n
# nn = nn
# H_hat = H_hat
#####
kk = c(ns[1]/ns_sum, ns[2]/ns_sum)
if(s==t){
theta_hat = 0
for(j in 1:2){ #(t,t)
Indicatorf = matrix(rep(TT[[j]],nn-1), nn-1, ns[j], byrow=TRUE) <= matrix(rep(T12[-nn],ns[j]), nn-1,ns[j], byrow=FALSE)
theta_hat_temp = ((WWeights[j])^2) * ((Indicatorf-H_hat)^2)/(ns_sum * kk[j]^2 * weights[[j]]^2)
theta_hat_temp = apply(theta_hat_temp, 1, sum)
theta_hat = theta_hat + theta_hat_temp
}
}else{ #(s,t)or(t,s)
theta_hat = 0
for(j in 1:2){ #j=1
matrix_temp = matrix(rep(NA,(nn-1-1)*(ns[j])),nn-1-1,ns[j])
Indicatorf = matrix(rep(TT[[j]],nn-1), nn-1, ns[j], byrow=TRUE) <= matrix(rep(T12[-nn],ns[j]), nn-1, ns[j], byrow=FALSE)
s_matrix = Indicatorf - H_hat
t_matrix = s_matrix
WW = WWeights[j]^2
denominator = ns_sum * kk[j]^2 * weights[[j]]^2
for(t in 2:(nn-1)){ #t=2
for(s in 1:(t-1)){ #s=1
sum_n = 0
theta_hat_temp = c()
for(ns_temp in 1:ns[j]){ #ns_temp=1
matrix_temp[s,ns_temp] = WW * s_matrix[s,ns_temp] * t_matrix[t,ns_temp] / denominator[ns_temp]
}
theta_hat_temp = apply(matrix_temp, 1, sum)
}
}
theta_hat = theta_hat + theta_hat_temp
}
}
return(theta_hat)
}
BS_2sample_revised(data,r,nboot)
BS_2sample_revised <- function(data, r, nboot){
T1 = data[[1]]
T2 = data[[2]]
T12 <- sort(unique(c(T1,T2)))
nboot=nboot
n1 = length(T1)
n2 = length(T2)
n = n1 + n2
nn = length(T12)
weights1=T1 ^ r[1]
weights2=T2 ^ r[2]
weights = c(weights1,weights2)
WWeights1 = n1/(sum(1/weights1))
WWeights2 = n2/(sum(1/weights2))
WWeights  = c(WWeights1,WWeights2)
kk = c(n1/n,n2/n)
p_hat1 = WWeights1/(n1*weights1)
p_hat2 = WWeights2/(n2*weights2)
ECDF1 <- apply((matrix(rep(p_hat1,nn-1), nn-1, n1, byrow=TRUE) * (matrix(rep(T1,nn-1), nn-1, n1, byrow=TRUE) <= matrix(rep(T12[-nn],n1), nn-1, n1, byrow=FALSE))), 1, sum) #F_hat1
ECDF2 <- apply((matrix(rep(p_hat2,nn-1), nn-1, n2, byrow=TRUE) * (matrix(rep(T2,nn-1), nn-1, n2, byrow=TRUE) <= matrix(rep(T12[-nn],n2), nn-1, n2, byrow=FALSE))), 1, sum) #F_hat2
H_hat =  ( n1*ECDF1 + n2*ECDF2 )/n
dH_hatvec = c(0, H_hat)
theta_hat_t_t = theta_func("t","t",list(T1,T2),T12,c(WWeights1, WWeights2),list(weights1,weights2),c(n1,n2),n,nn,H_hat)
AD6_o<- ((n1*n2)/n) * sum( ((ECDF1 - ECDF2)^2) / (H_hat*(1-H_hat)) * diff(dH_hatvec))
AD6_t<- n * sum( ((ECDF1 - ECDF2)^2) / (theta_hat_t_t) * diff(dH_hatvec))
#AD7
theta_hat_s_t = theta_func("s","t",list(T1,T2),T12,c(WWeights1, WWeights2),list(weights1,weights2),c(n1,n2),n,nn,H_hat)
b1  <- ECDF1 - ECDF2 #A2 first matrix[1,1]
b2  <- b1 #A2 first matrix[1,2]
a11_t <- theta_hat_t_t #A2 second matrix[1,1]
a11_o <- H_hat*(1-H_hat)
a21_t <- theta_hat_s_t #A2 second matrix[2,1]&[1,2]
a21_o <- H_hat%*%t(1-H_hat)
a22_t <- a11_t #A2 second matrix[2,2]
a22_o <- a11_o #A2 second matrix[2,2]
AD7_unit_t <- matrix(rep(NA,(nn-1)*(nn-1)),nn-1,nn-1)
AD7_unit_o <- matrix(rep(NA,(nn-1)*(nn-1)),nn-1,nn-1)
for(k in 2:(nn-1)){  #t k=2
for(j in 1:(k-1)){ #s j=1
Vinv_t <- solve(matrix(c(a11_t[j], a21_t[j], a21_t[j], a22_t[k]),2,2)) #A2 second matrix inv
Vinv_o <- solve(matrix(c(a11_o[j], a21_o[j,k], a21_o[j,k], a22_o[k]),2,2))
dH_hat_t_vec <- c(0, H_hat[k])
dH_hat_s_vec <- c(0, H_hat[j])
AD7_unit_t[j,k] <- (t(c(b1[j], b2[k]))%*%Vinv_t%*%c(b1[j], b2[k])) * diff(dH_hat_s_vec) * diff(dH_hat_t_vec)
AD7_unit_o[j,k] <- (t(c(b1[j], b2[k]))%*%Vinv_o%*%c(b1[j], b2[k])) * diff(dH_hat_s_vec) * diff(dH_hat_t_vec)
}
}
AD7_o <- (n1*n2/n)*sum(AD7_unit_o, na.rm=TRUE)  # NA bc for j=1, AD7_unit[1, 1] not defined
AD7_t <- n*sum(AD7_unit_t, na.rm=TRUE)
AD7p_t <- AD6_t + AD7_t
AD7p_o <- AD6_o + AD7_o
AD6_star_t <- rep(NA,nboot)
AD7_star_t <- rep(NA,nboot)
AD6_star_o <- rep(NA,nboot)
AD7_star_o <- rep(NA,nboot)
#b = 1 #for test
for(b in 1:nboot){
xi1<- rnorm(n1, 0, 1)
xi2<- rnorm(n2, 0, 1)
D1_star <- apply(matrix(rep((xi1 * p_hat1),nn-1), nn-1, n1, byrow=TRUE) * ((matrix(rep(T1,nn-1), nn-1, n1, byrow=TRUE) <= matrix(rep(T12[-nn],n1), nn-1, n1, byrow=FALSE)) - H_hat[-nn]), 1, sum)
D2_star <- apply(matrix(rep((xi2 * p_hat2),nn-1), nn-1, n2, byrow=TRUE) * ((matrix(rep(T2,nn-1), nn-1, n2, byrow=TRUE) <= matrix(rep(T12[-nn],n2), nn-1, n2, byrow=FALSE)) - H_hat[-nn]), 1, sum)
#AD6
# AD_s_unit_6_I1 <- apply(matrix(rep(xi1,n-1), n-1, n1, byrow=TRUE) * ((matrix(rep(T1,n-1), n-1, n1, byrow=TRUE) <= matrix(rep(T12[-n],n1), n-1, n1, byrow=FALSE)) - H_hat[-n]), 1, mean)
# AD_s_unit_6_I2 <- apply(matrix(rep(xi2,n-1), n-1, n2, byrow=TRUE) * ((matrix(rep(T2,n-1), n-1, n2, byrow=TRUE) <= matrix(rep(T12[-n],n2), n-1, n2, byrow=FALSE)) - H_hat[-n]), 1, mean)
AD_s_unit_6 <- (D1_star - D2_star) ^ 2
AD6_star_o[b] <- (n1*n2/n)*sum(AD_s_unit_6/(H_hat[-nn]*(1-H_hat[-nn]))*diff(dH_hatvec), na.rm = TRUE)
AD6_star_t[b] <- n*sum(AD_s_unit_6/(theta_hat_t_t)*diff(dH_hatvec), na.rm = TRUE)
#AD7
AD7_unit_star_t <- matrix(rep(NA,(nn-1)*(nn-1)),nn-1,nn-1)
AD7_unit_star_o <- matrix(rep(NA,(nn-1)*(nn-1)),nn-1,nn-1)
# b1s_I1 <- apply(matrix(rep(xi1,n-1), n-1, n1, byrow=TRUE) * ((matrix(rep(T1,n-1), n-1, n1, byrow=TRUE) <= matrix(rep(T12[-n],n1), n-1, n1, byrow=FALSE)) - H_hat[-n]), 1, mean)
# b1s_I2 <- apply(matrix(rep(xi2,n-1), n-1, n2, byrow=TRUE) * ((matrix(rep(T2,n-1), n-1, n2, byrow=TRUE) <= matrix(rep(T12[-n],n2), n-1, n2, byrow=FALSE)) - H_hat[-n]), 1, mean)
b1s <- (D1_star - D2_star)
b2s<- b1s # v2
for(k in 2:(nn-1)){  #t
for(j in 1:(k-1)){ #s
dH_hat_t_vec = c(0, H_hat[k])
dH_hat_s_vec = c(0, H_hat[j])
Vinv_t <- solve(matrix(c(a11_t[j], a21_t[j], a21_t[j], a22_t[k]),2,2))
Vinv_o <- solve(matrix(c(a11_o[j], a21_o[j,k], a21_o[j,k], a22_o[k]),2,2))
AD7_unit_star_t[j,k]<- (t(c(b1s[j], b2s[k]))%*%Vinv_t%*%c(b1s[j], b2s[k]))*diff(dH_hat_s_vec)*diff(dH_hat_t_vec)
AD7_unit_star_o[j,k]<- (t(c(b1s[j], b2s[k]))%*%Vinv_o%*%c(b1s[j], b2s[k]))*diff(dH_hat_s_vec)*diff(dH_hat_t_vec)
}
}
AD7_star_t[b]<- n*sum(AD7_unit_star_t,na.rm=TRUE)
AD7_star_o[b]<- (n1*n2/n)*sum(AD7_unit_star_o,na.rm=TRUE)
}
AD7p_star_t  <- AD6_star_t + AD7_star_t
rej.rate6_t <- AD6_t  > quantile(AD6_star_t,0.95)
rej.rate7_t <- AD7_t  > quantile(AD7_star_t,0.95)
rej.rate7p_t <- AD7p_t > quantile(AD7p_star_t,0.95)
AD7p_star_o  <- AD6_star_o + AD7_star_o
rej.rate6_o <- AD6_o  > quantile(AD6_star_o,0.95)
rej.rate7_o <- AD7_o  > quantile(AD7_star_o,0.95)
rej.rate7p_o <- AD7p_o > quantile(AD7p_star_o,0.95)
out_array=list(
rej.rate6_o=rej.rate6_o,
rej.rate7_o=rej.rate7_o,
rej.rate7p_o=rej.rate7p_o,
rej.rate6_t=rej.rate6_t,
rej.rate7_t=rej.rate7_t,
rej.rate7p_t=rej.rate7p_t
)
return(out_array)
}
BS_2sample_revised(data,r,nboot)
a = c(T,F,T,T)
mean(a)
quantile(a,0.95)
b = c(1,2,3,4,5,6,7,8)
a = 3
a>b
mean(a>b)
a = 7
mean(a>b)
plot(rnorm(100))
density(rnorm(100))
plot(density(rnorm(100)))
max(rnorm(100))
set.seed(1)
plot(density(rnorm(100)))
max(rnorm(100))
max(rnorm(100))
set.seed(1)
max(rnorm(100))
max(rnorm(100))
set.seed(1)
max(rnorm(100))
plot(density(rnorm(100)))
set.seed(1)
plot(density(rnorm(100)))
set.seed(1)
max(rnorm(100))
density(rnorm(100))
a = rep(100)
a
a = seq(100)
a
quantile(a,0.95)
quantile(a,0.96)
a[95]
a[1:95]
append(a[1:95],c(95,97,98,99,100))
b = append(a[1:95],c(95,97,98,99,100))
quantile(b,0.95)
